javadoc-snippet Example Usage

* Setting up the Javadoc snippet

 The javadoc-snippet plugin is based on the standard doxia snippet plugin. Snippets are defined in exactly the same way.

 For example, the snippet used to generate the examples below is:

%{snippet|id=example|file=${project.basedir}/src/main/java/uk/co/dantwining/App.java}

* Standard output from the snippet macro

 Please refer to the Snippet Macro documentation for including snippets in your APT pages. The standard snippet macro looks something like:

+--
 %{snippet|id=sample|file=...
+--

 Using this built-in doxia snippet macro, the output for our sample snippet is:

%{snippet|id=sample|file=${project.basedir}/src/main/java/uk/co/dantwining/App.java}

* Standard output using the javadoc-snippet plugin

 To render the same snippet using the javadoc-snippet plugin, change the name of the macro to:

+--
 %{javadoc-snippet|id=sample|file=...
+--

 Using the javadoc-snippet macro, the output for our sample snippet is now:

%{javadoc-snippet|id=sample|file=${project.basedir}/src/main/java/uk/co/dantwining/App.java}

* Formatted output using the javadoc-snippet plugin

 To render the same snippet as non-verbatim text, and without the surrounding box, add the verbatim=false parameter to the macro declaration:

+--
 %{javadoc-snippet|verbatim=false|id=sample|file=...
+--

 Using the javadoc-snippet macro with verbatim=false, the output for our sample snippet is now:

%{javadoc-snippet|verbatim=false|id=sample|file=${project.basedir}/src/main/java/uk/co/dantwining/App.java}

 This allows you to use HTML formatting in your javadoc comments, and have them render correctly in your maven site. All
 of the standard HTML elements used in Javadoc should be rendered correctly in your Maven Site page.
